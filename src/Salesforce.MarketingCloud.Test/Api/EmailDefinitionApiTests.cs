/* 
 * Marketing Cloud REST API
 *
 * Marketing Cloud's REST API is our newest API. It supports multi-channel use cases, is much more lightweight and easy to use than our SOAP API, and is getting more comprehensive with every release.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mc_sdk@salesforce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Salesforce.MarketingCloud.Client;
using Salesforce.MarketingCloud.Api;
using Salesforce.MarketingCloud.Model;

namespace Salesforce.MarketingCloud.Test
{
    /// <summary>
    ///  Class for testing EmailDefinitionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class EmailDefinitionApiTests
    {
        private EmailDefinitionApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new EmailDefinitionApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EmailDefinitionApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EmailDefinitionApi
            //Assert.IsInstanceOfType(typeof(EmailDefinitionApi), instance, "instance is a EmailDefinitionApi");
        }

        
        /// <summary>
        /// Test CreateEmailDefinition
        /// </summary>
        [Test]
        public void CreateEmailDefinitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EmailDefinition body = null;
            //var response = instance.CreateEmailDefinition(body);
            //Assert.IsInstanceOf<EmailDefinition> (response, "response is EmailDefinition");
        }
        
        /// <summary>
        /// Test DeleteEmailDefinitionByDefinitionKey
        /// </summary>
        [Test]
        public void DeleteEmailDefinitionByDefinitionKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string definitionKey = null;
            //var response = instance.DeleteEmailDefinitionByDefinitionKey(definitionKey);
            //Assert.IsInstanceOf<SuccessfulEmailDefinitionDelete> (response, "response is SuccessfulEmailDefinitionDelete");
        }
        
        /// <summary>
        /// Test GetEmailDefinitionByDefinitionKey
        /// </summary>
        [Test]
        public void GetEmailDefinitionByDefinitionKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string definitionKey = null;
            //var response = instance.GetEmailDefinitionByDefinitionKey(definitionKey);
            //Assert.IsInstanceOf<EmailDefinition> (response, "response is EmailDefinition");
        }
        
        /// <summary>
        /// Test GetEmailDefinitions
        /// </summary>
        [Test]
        public void GetEmailDefinitionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //decimal? pageSize = null;
            //decimal? page = null;
            //string orderBy = null;
            //var response = instance.GetEmailDefinitions(filter, pageSize, page, orderBy);
            //Assert.IsInstanceOf<EmailDefinitionsResponse> (response, "response is EmailDefinitionsResponse");
        }
        
        /// <summary>
        /// Test PartiallyUpdateEmailDefinition
        /// </summary>
        [Test]
        public void PartiallyUpdateEmailDefinitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string definitionKey = null;
            //EmailDefinitionDescription body = null;
            //var response = instance.PartiallyUpdateEmailDefinition(definitionKey, body);
            //Assert.IsInstanceOf<EmailDefinition> (response, "response is EmailDefinition");
        }
        
    }

}
